{"version":3,"file":"static/js/230.fb2e3343.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.js"],"sourcesContent":["\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 300px;\n  border-radius: 5px;\n  padding: 10px;\n  backdrop-filter: blur(10px);\n  @media (max-width: 575.98px) {\n    width: 100%;\n  padding: 20px;\n    \n  }\n`\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  font-family:\"Montserrat\",sans-serif;\ncolor:#efe6e6;\nfont-weight:400;\nfont-size:0.938rem;\nline-height: 1.15;\n`\nexport const Button = styled.button`\nwidth: 100 %;\npadding: 10px ;\nmargin-top: 10px;\nborder: none;\nborder-radius: 10px;\nfont-weight: 600;\nbackground-color: #ff1552;\ncursor: pointer;\ncolor: #efe6e6;\n`\n\n\n\n\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\nexport const getIsLoading = state => state.contacts.isLoading\nexport const getError = state => state.contacts.error;","import { Form, Label, Button } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts, getIsLoading, getError } from '../../redux/contacts/selectors';\n\n\nexport function ContactForm() {\n\n\tconst [name, setName] = useState('');\n\tconst [number, setNumber] = useState('');\n\n\tconst allContacts = useSelector(getContacts);\n\tconst dispatch = useDispatch();\n\tconst error = useSelector(getError)\n\tconst isLoading = useSelector(getIsLoading)\n\n\tconst handleChange = e => {\n\t\tconst { name, value } = e.currentTarget;\n\n\t\tswitch (name) {\n\t\t\tcase 'name':\n\t\t\t\tsetName(value);\n\t\t\t\tbreak;\n\n\t\t\tcase 'number':\n\t\t\t\tsetNumber(value);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tfunction handleSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\tconst contactName = [];\n\n\t\tconst contactsName = allContacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n\t\tif (contactsName) {\n\t\t\talert(`${name} is Already in contacts`);\n\t\t\treturn;\n\t\t}\n\t\tconst contactNumber = allContacts.find(contact => contact.number === number);\n\t\tif (contactNumber) {\n\t\t\talert(`${number} is Already in contacts`);\n\t\t\treturn;\n\t\t}\n\t\tfor (const contact of allContacts) {\n\t\t\tcontactName.push(contact.name);\n\t\t}\n\t\tif (contactName.includes(name)) {\n\t\t\talert(`${name} is already in contacts list`);\n\t\t\treturn;\n\t\t}\n\t\tdispatch(addContact({ name, number }));\n\t\treset();\n\t}\n\n\tconst reset = () => {\n\t\tsetName('');\n\t\tsetNumber('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{error && <p>{error}</p>}\n\t\t\t{isLoading ? <p>Request in progress...</p>\n\t\t\t\t:\n\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tName\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\trequired />\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tNumber\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\t\ttitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\trequired />\n\t\t\t\t\t</Label>\n\n\t\t\t\t\t<Button type='submit'>Add contact</Button>\n\n\t\t\t\t</Form>\n\t\t\t}\n\t\t</>\n\n\t);\n\n\n};\n\nexport default ContactForm;","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\nlist-style: none;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nwidth: 290px;\n&:not(:last-child) {\n    margin-bottom: 10px;\n`;\nexport const List = styled.ul`\npadding:0;\n`;\nexport const Button = styled.button`\ndisplay: block;\nwidth: 30px;\nhight: 30px;\npadding: 5px 5px;\ntext-align:centre;\n\nborder: none;\nborder-radius: 50%;\nfont-weight: 600;\nbackground-color: #ff1552;\ncursor: pointer;\ncolor: #efe6e6;\n`\n","import { List, ListItem, Button } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors'\nimport { deleteContact } from '../../redux/contacts/operations';\n\n\nexport const ContactList = () => {\n\n\tconst contacts = useSelector(getContacts);\n\tconst filter = useSelector(getFilter);\n\tconst dispatch = useDispatch();\n\n\tconst getVisiblContacts = contacts.filter(contact =>\n\t\tcontact.name.toLowerCase().includes(filter.toLowerCase()))\n\treturn (\n\t\t<List>\n\t\t\t{getVisiblContacts.map((contact, index) => (\n\t\t\t\t<ListItem key={contact.id}>\n\t\t\t\t\t{index + 1}. {contact.name} : {contact.number}\n\t\t\t\t\t{\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => dispatch(deleteContact(contact.id))}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tx\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t}\n\t\t\t\t</ListItem>\n\t\t\t))}\n\t\t</List>\n\t)\n\n\n};","import styled from 'styled-components';\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\ncolor: #ff1552\n`;\n\nexport const Input = styled.input`\nwidth: 100%;\nmargin-top: 10px;\n`;","import { Label, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contactSlice';\nimport { getFilter } from '../../redux/contacts/selectors';\n\n\nexport const Filter = () => {\n\n\tconst filter = useSelector(getFilter);\n\tconst dispatch = useDispatch();\n\tconst filterName = (e) => {\n\t\tdispatch(filterContacts(e.currentTarget.value));\n\t}\n\n\treturn (\n\t\t<Label>\n\t\t\tFind contacts by name\n\t\t\t<Input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={filter}\n\t\t\t\tonChange={filterName}\n\t\t\t/>\n\t\t</Label>\n\t);\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts_wrapper__fniYR\"};","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { useEffect } from 'react';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\tdispatch(fetchContacts());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<>\n\t\t\t<div style={{ marginTop: \"30px\", color: \"white\" }} >\n\t\t\t\t<ContactForm />\n\t\t\t</div>\n\t\t\t<div className={css.wrapper}>\n\t\t\t\t<h2>Added Contacts</h2>\n\t\t\t\t<Filter />\n\t\t\t\t<ContactList />\n\t\t\t</div>\n\n\t\t</>\n\t);\n}\n\n\n\n\n"],"names":["Form","styled","Label","Button","getContacts","state","contacts","getFilter","filter","getIsLoading","isLoading","getError","error","ContactForm","useState","name","setName","number","setNumber","allContacts","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","event","preventDefault","contactName","contactsName","find","contact","toLowerCase","alert","contactNumber","push","includes","addContact","type","pattern","title","onChange","required","ListItem","List","ContactList","getVisiblContacts","map","index","onClick","deleteContact","id","Input","Filter","filterContacts","Contacts","useEffect","fetchContacts","style","marginTop","color","className","css"],"sourceRoot":""}